
How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was easy to compare the old to the new file and just see what changed vs. manually searching through the file looking for differences.





How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You don't have to manage the saving off of old versions and keeping track of them.





What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

PRO: You control the size of the logical unit of work
CON: You may not commit enough





Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Multi-commit allows you to easily re-construct a "package" of files without having to determine the exact versions of each file for a point in time.  It is like a tag in SVN.





How can you use the commands git log and git diff to view the history of files?

git log shows the you commits and git diff will show you the differences from one commit point to another.





How might using version control make you more confident to make changes that could break something?

You can try to make changes to experiment knowing that you can easily get back to the last working copy





Now that you have your workspace set up, what do you want to try using Git for?

to learn

